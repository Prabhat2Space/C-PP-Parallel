PASL-->
	Parallel Algorithm Scheduling Library
	
	/* The call to `launch` creates an instance of the PASL runtime and
	* then runs a few given functions in order. Specifically, the call
	* to launch calls our local functions in order:
	*
	*          init(); run(); output(); destroy();
	*
	* Each of these functions are allowed to call internal PASL
	* functions, such as `fork2`. Note, however, that it is not safe to
	* call such PASL library functions outside of the PASL environment.
	*
	* After the calls to the local functions all complete, the PASL
	* runtime reports among other things, the execution time of the
	* call `run();`.
	*/